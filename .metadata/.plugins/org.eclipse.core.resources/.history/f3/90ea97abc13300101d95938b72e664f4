package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import model.Post;

public class PostDAO {
	private static final String URL = "jdbc:mysql://localhost:3306/X_db?useSSL=false&serverTimezone=UTC";
	private static final String DB_USER = "test";
	private static final String DB_PASSWORD = "dyfkmochi941523";

	// 投稿を保存
	public static boolean insert(int userId, String content) {
		String sql = "INSERT INTO posts (user_id, content) VALUES (?, ?)";

		try (
				Connection conn = DriverManager.getConnection(URL, DB_USER, DB_PASSWORD);
				PreparedStatement stmt = conn.prepareStatement(sql)) {
			stmt.setInt(1, userId);
			stmt.setString(2, content);
			return stmt.executeUpdate() == 1;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}

	// 投稿一覧（ユーザー名も含む）を新しい順に取得
	public static List<Post> findAll() {
		List<Post> postList = new ArrayList<>();
		String sql = """
				    SELECT p.id, p.user_id, u.name, p.content, p.created_at
				    FROM posts p
				    INNER JOIN users u ON p.user_id = u.id
				    ORDER BY p.created_at DESC
				""";

		try (
				Connection conn = DriverManager.getConnection(URL, DB_USER, DB_PASSWORD);
				PreparedStatement stmt = conn.prepareStatement(sql);
				ResultSet rs = stmt.executeQuery()) {
			while (rs.next()) {
				Post post = new Post(
						rs.getInt("id"),
						rs.getInt("user_id"),
						rs.getString("name"),
						rs.getString("content"),
						rs.getTimestamp("created_at").toLocalDateTime());
				postList.add(post);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}

		return postList;
	}

	// 投稿削除（投稿IDとユーザーIDが一致する場合のみ）
	public static boolean delete(int postId, int userId) {
		String sql = "DELETE FROM posts WHERE id = ? AND user_id = ?";

		try (
				Connection conn = DriverManager.getConnection(URL, DB_USER, DB_PASSWORD);
				PreparedStatement stmt = conn.prepareStatement(sql)) {
			stmt.setInt(1, postId);
			stmt.setInt(2, userId);
			return stmt.executeUpdate() == 1;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}
	
	// PostDAO.java に追加
	public static List<Post> findByUserId(int userId) {
	    List<Post> list = new ArrayList<>();

	    try (Connection conn = DBUtil.getConnection()) {
	        String sql = "SELECT * FROM posts WHERE user_id = ? ORDER BY created_at DESC";
	        PreparedStatement stmt = conn.prepareStatement(sql);
	        stmt.setInt(1, userId);
	        ResultSet rs = stmt.executeQuery();

	        while (rs.next()) {
	            list.add(new Post(
	                rs.getInt("id"),
	                rs.getInt("user_id"),
	                rs.getString("user_name"),
	                rs.getString("content"),
	                rs.getTimestamp("created_at").toLocalDateTime()
	            ));
	        }
	    } catch (Exception e) {
	        e.printStackTrace();
	    }

	    return list;
	}

}
